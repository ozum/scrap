name: Build and Test
on: [push, pull_request]
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
      - name: Start PostgreSQL
        if: env.POSTGRESQL == 'true'
        run: |
          sudo systemctl start postgresql.service
          pg_isready

      - name: Create additional PostgreSQL user
        if: env.POSTGRESQL == 'true'
        run: sudo -u postgres psql --command="CREATE USER \"user\" PASSWORD 'password' SUPERUSER CREATEDB REPLICATION" --command="\du"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"

      - name: Install project
        run: pnpm install

      - name: Verify & Build
        run: pnpm exec concurrently --kill-others-on-fail -g -n '    Audit   ,Dependencies,    Lint    ,   Format   ,    Test    ,    Build   ' -c 'auto' 'pnpm audit --audit-level critical' 'knip' 'pnpm lint --no-fix' 'pnpm format --no-write --check' 'pnpm test' 'pnpm build'

      # - name: Audit
      #   run: pnpm audit --audit-level critical

      # - name: Check Dependencies
      #   run: knip

      # - name: Lint
      #   run: pnpm lint --no-fix

      # - name: Format
      #   run: pnpm format --no-write --check

      # - name: Test
      #   run: pnpm test

      # - name: Build
      #   run: pnpm build

      - name: Release
        if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm dlx semantic-release
